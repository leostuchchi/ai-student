# -*- coding: utf-8 -*-
"""UntitledEDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11vYactHjrzYONFB5uu3ALWyrQd07_HZy

Импортируем необходимые библиотеки
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Импортируем базу данных"""

DIAMONDS_DATASET = "https://raw.githubusercontent.com/aiedu-courses/stepik_eda_and_dev_tools/main/datasets/diamonds_clean.csv"

"""Pandas читают csv (формат такой) панды его любят... почитать"""

df = pd.read_csv(DIAMONDS_DATASET)

"""Угу панды прочитали, нам тоже интересно, чо там чо там, а не посмотреть ли нам верхних пару строк)"""

df.head()

"""прикольненько, если загибать все пальцы, будет как раз столько же столбцов

сейчас ещё узнаем сколько там строк
"""

df.shape #угу запомнил, кавычек не нужно

"""Что же там за данные такие? И все ли ячейки заполнены данными?"""

df.info()

"""интересно, а что в конце таблички"""

df.tail()

"""а если выбрать еще пару строк, точнее семь"""

df.sample(7)

"""узнаем сколько численных значений"""

df.describe()

"""а теперь посчитаем количество объектов в табличке)"""

df.describe(include='object')

"""Теперь находим то, что нам может не понравится, а именно пропуски значений в нашей табличке"""

df.describe(include='all')

"""А если Вдруг или не вдруг, какая разница, мы их всёравно найдём, как их, дубликаты воть"""

df.duplicated().sum()

df[df.duplicated()]

"""и удалим"""

# df = df.drop_duplicates()

df.drop_duplicates(inplace=True)

df.shape

df.reset_index(inplace=True, drop=True)

df.head()

"""и еще чо нить дропнем"""

#df.drop('index', axis=1, inplace=True) ну дас, ошибочка вышла

#df.head()

"""# А теперь поработаем над пропущенными значениями

ТАК и сколько же у нас нулей?
"""

df.isnull().mean() * 100

"""Здесь ещё напишем отсебятины какой нибудь..... потом..... наверноможетбыть"""

#место для будущих свершений

"""# Однофакторный Анализ

а почему бы нам не порисовать?

а кто нам запретит рисовать графики на обоях?
"""

plt.figure(figsize=(4,3))

plt.hist(df.carat);

plt.figure(figsize=(4,3))

plt.hist(df.carat, bins=20);

"""а какой он самый большой?"""

df.carat.max()

"""самый маленький"""

df.carat.min()

сколько маленьких

len(df[df.carat < 0.3])

"""сколько %%% больших"""

100 * len(df[df.carat >= 1]) / len(df)

"""влияние веса на стоимость тоже можем посмотреть"""

plt.figure(figsize=(6,4))

plt.scatter(df.carat, df.price);

np.corrcoef(df.carat, df.price)[0][1]

"""а может что то еще влияет на стоимость кроме веса?
давайте проверим
"""

df['cut'].value_counts(normalize=True)

df['cut'] = df['cut'].replace('Goood', 'Good')

plt.figure(figsize=(6,4))

sns.barplot(x='cut', y='price', data = df, palette='summer')
plt.title('Cut - price')
plt.show();

"""Посчитаем стоимость по категориям"""

df.groupby('cut')['price'].mean()

"""а теперь огранку"""

df.groupby('cut').agg(PriceMean=('price','mean'),
                      PriceMedian=('price', 'median'),
                      CaratMean=('carat', 'mean'))

df.groupby('cut').agg(PriceMean=('price','mean'),
                      PriceMedian=('price', 'median'),
                      CaratMean=('carat', 'mean'))

"""попробуем корреляцию"""

np.corrcoef(df.table, df.price)[0][1]

np.corrcoef(df.depth, df.price)[0][1]

"""# Пушка Бомба HTML report"""

!pip install ydata_profiling
!pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip -q

from ydata_profiling import ProfileReport

df_copy = pd.read_csv(DIAMONDS_DATASET)

profile_report = ProfileReport(df_copy, title='Pandas Profiling Report')

profile_report

profile_report.to_file('Diamonds_report.html')